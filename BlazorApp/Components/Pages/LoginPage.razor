@page "/login"
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<link href="/LoginPage.css" rel="stylesheet" />

<div class="login-page">
    <div class="login-container">
        <div class="login-card">
            <div class="login-header">
                <h1>Bienvenido de vuelta</h1>
                <p>Ingresa tus credenciales para continuar</p>
            </div>

            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-error">
                    <span class="alert-icon">⚠️</span>
                    <span>@errorMessage</span>
                </div>
            }

            <form class="login-form" @onsubmit="HandleLogin">
                <div class="form-group">
                    <label for="username">Usuario</label>
                    <input type="text"
                           id="username"
                           class="form-control"
                           placeholder="tu usuario"
                           @bind="loginModel.Username"
                           required />
                </div>

                <div class="form-group">
                    <label for="password">Contraseña</label>
                    <input type="password"
                           id="password"
                           class="form-control"
                           placeholder="••••••••"
                           @bind="loginModel.Password"
                           required />
                </div>

                <div class="form-options">
                    <label class="checkbox-label">
                        <input type="checkbox" @bind="rememberMe" />
                        <span>Recordarme</span>
                    </label>
                    <a href="/forgot-password" class="link-primary">¿Olvidaste tu contraseña?</a>
                </div>

                <button type="submit" class="btn-primary btn-full" disabled="@isLoading">
                    @if (isLoading)
                    {
                        <span class="spinner"></span>
                        <span>Iniciando sesión...</span>
                    }
                    else
                    {
                        <span>Iniciar Sesión</span>
                    }
                </button>
            </form>

            <div class="login-footer">
                <p>¿No tienes cuenta? <a href="/register" class="link-primary">Regístrate aquí</a></p>
            </div>

        </div>

        <button class="btn-back" @onclick="GoBack">
            ← Volver al inicio
        </button>
    </div>
</div>

@code {
    private LoginModel loginModel = new();
    private bool rememberMe = false;
    private bool isLoading = false;
    private string errorMessage = string.Empty;
    private string role = "";
    private bool response;

    private async Task HandleLogin()
    {
        isLoading = true;
        errorMessage = string.Empty;
        StateHasChanged();
        role = "";

        try
        {
            // Simulación de llamada al backend
            await Task.Delay(1500);

            // Aquí harías la llamada real a tu API
            response = await AuthService.LoginAsync(loginModel.Username, loginModel.Password);
            System.Diagnostics.Debug.WriteLine($"[LoginPageRazor] Logueado? : {response.ToString()}");

            role = await AuthService.GetRoleAsync();
            System.Diagnostics.Debug.WriteLine($"[LoginPageRazor] Tratando de leer rol del user {loginModel.Username} : {role}");

            NavigationManager.NavigateTo($"/dashboard/{role}");
        }
        catch (Exception ex)
        {
            errorMessage = $"Error al iniciar sesión. Por favor, intenta nuevamente. {response.ToString()}";
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private void LoginWithGoogle()
    {
        // Implementar login con Google
        errorMessage = "Login con Google próximamente disponible";
    }

    private void LoginWithFacebook()
    {
        // Implementar login con Facebook
        errorMessage = "Login con Facebook próximamente disponible";
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/");
    }

    private class LoginModel
    {
        public string Username { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }
}
